{"version":3,"sources":["Components/Button/index.js","Components/GenreButtons/index.js","Components/DifficultyButtons/index.js","Components/WelcomePage/index.js","Hooks/useFetch.js","Components/DisplayAnswers/index.js","Components/DisplayQuestion/index.js","Components/App/index.js","index.js"],"names":["Button","children","props","className","genres","GenreButtons","dispatch","map","genre","onClick","type","payload","DifficultyButtons","id","WelcomePage","isVisible","handleVisibility","onSubmit","e","target","value","preventDefault","placeholder","useFetch","url","dependency","useReducer","state","action","results","data","useEffect","a","fetch","res","json","getData","DisplayAnswers","correctAnswer","incorrectAnswers","nextQuestion","useState","answers","setAnswers","randomNum","Math","floor","random","slice","isClicked","setIsClicked","answer","disabled","button","setTimeout","updateScore","DisplayQuestion","isNotVisible","toggleVisibility","questions","difficulty","questionIndex","setQuestionIndex","question","correct_answer","incorrect_answers","score","playerName","initialState","reducer","App","isWelcomePage","setIsWelcomePage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92ece9a7.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nfunction Button({ children, ...props }) {\n  return (\n    <button className=\"button\" {...props}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import Button from '../Button';\nimport React from 'react';\nimport './index.css';\n\nconst genres = [\n  ['General Knowledge', 9],\n  ['Animals', 27],\n  ['Books', 10],\n  ['Film', 11],\n  ['Music', 12],\n  ['Anime and Manga', 31],\n  ['Television', 14],\n  ['Video Games', 15],\n  ['Board Games', 16],\n  ['Sports', 21],\n];\n\nfunction GenreButtons({ dispatch }) {\n  return (\n    <div className=\"genre-buttons\">\n      {genres.map((genre) => (\n        <Button onClick={() => dispatch({ type: 'GENRE', payload: genre[1] })}>\n          {genre[0]}\n        </Button>\n      ))}\n    </div>\n  );\n}\n\nexport default GenreButtons;\n","import Button from '../Button';\nimport React from 'react';\nimport './index.css';\nfunction DifficultyButtons({ dispatch }) {\n  return (\n    <div className=\"difficulty-buttons\">\n      <Button\n        id=\"easy-button\"\n        onClick={() => dispatch({ type: 'DIFFICULTY', payload: 'easy' })}\n      >\n        Easy\n      </Button>\n      <Button\n        id=\"medium-button\"\n        onClick={() => dispatch({ type: 'DIFFICULTY', payload: 'medium' })}\n      >\n        Medium\n      </Button>\n      <Button\n        id=\"hard-button\"\n        onClick={() => dispatch({ type: 'DIFFICULTY', payload: 'hard' })}\n      >\n        Hard\n      </Button>\n    </div>\n  );\n}\n\nexport default DifficultyButtons;\n","import React, { useState } from 'react';\nimport './index.css';\nimport GenreButtons from '../GenreButtons';\nimport DifficultyButtons from '../DifficultyButtons';\n\n// state difficulty , genre, number of questions, player name\n// Display box for chosen Diff and Genre\n\nfunction WelcomePage({ dispatch, isVisible, handleVisibility }) {\n  function handleSubmit(e) {\n    dispatch({ type: 'PLAYER_NAME', payload: e.target[0].value });\n    e.preventDefault();\n  }\n\n  return (\n    <div id=\"welcome-page\" className={isVisible ? 'visible' : 'invisible'}>\n      <form onSubmit={handleSubmit}>\n        <input placeholder=\"Enter Name Here...\"></input>\n      </form>\n      <DifficultyButtons dispatch={dispatch} />\n      <GenreButtons dispatch={dispatch} />\n      <button className=\"start-button\" onClick={handleVisibility}>\n        Start Quiz\n      </button>\n    </div>\n  );\n}\n\nexport default WelcomePage;\n","import { useEffect, useReducer } from 'react';\n\nfunction useFetch(url, dependency) {\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'GET_DATA':\n        return action.payload;\n      default:\n        return state;\n    }\n  }\n\n  const [data, dispatch] = useReducer(reducer, { results: null });\n\n  useEffect(() => {\n    async function getData() {\n      const res = await fetch(url);\n      const data = await res.json();\n      // @ts-ignore\n      dispatch({ type: 'GET_DATA', payload: data });\n    }\n    getData();\n  }, [dependency]);\n\n  return data;\n}\n\nexport default useFetch;\n","import Button from '../Button';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './index.css';\n\nfunction DisplayAnswers({\n  dispatch,\n  correctAnswer,\n  incorrectAnswers,\n  nextQuestion,\n}) {\n  const [answers, setAnswers] = useState([]);\n\n  useEffect(() => {\n    //generate random number 0-3\n    const randomNum = Math.floor(Math.random() * 3);\n    //insert it at this random index\n    setAnswers([\n      ...incorrectAnswers.slice(0, randomNum),\n      correctAnswer,\n      ...incorrectAnswers.slice(randomNum),\n    ]);\n  }, [correctAnswer]);\n\n  const [isClicked, setIsClicked] = useState(false);\n\n  //updateScore takes index\n  //if index is random number\n  //dispatch to up the score\n  function updateScore(button, answer) {\n    setIsClicked(true);\n    if (answer === correctAnswer) {\n      dispatch({ type: 'SCORE', payload: 10 });\n      button.className = 'correct';\n    } else {\n      button.className = 'wrong';\n    }\n    setTimeout(() => {\n      setIsClicked(false);\n      nextQuestion();\n      button.className = 'neutral';\n    }, 750);\n  }\n\n  return (\n    <div className=\"answer-buttons\">\n      {answers.map((answer) => (\n        <Button\n          className={'neutral'}\n          disabled={isClicked}\n          onClick={({ target }) => {\n            updateScore(target, answer);\n          }}\n        >\n          {answer}\n        </Button>\n      ))}\n    </div>\n  );\n}\n\nexport default DisplayAnswers;\n","import { useState } from 'react';\nimport './index.css';\nimport useFetch from '../../Hooks/useFetch';\nimport DisplayAnswers from '../DisplayAnswers';\nimport React from 'react';\nimport Button from '../Button';\n\nconst REACT_APP_API_URL = 'https://opentdb.com/api.php?amount=10';\n//&category=27&difficulty=easy&type=multiple\n\nfunction DisplayQuestion({ state, dispatch, isNotVisible, toggleVisibility }) {\n  const { results: questions } = useFetch(\n    `${REACT_APP_API_URL}&category=${state.genre}&difficulty=${state.difficulty}&type=multiple`,\n    isNotVisible\n  );\n\n  // create a state for question number\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  if (!questions) {\n    return <div className={'invisible'}></div>;\n  }\n\n  return (\n    <div\n      id=\"display_question\"\n      className={isNotVisible ? 'invisible' : 'visible'}\n    >\n      {questionIndex < 10 ? (\n        <>\n          <p>{`${questionIndex + 1}. ${questions[questionIndex].question}`}</p>\n          <DisplayAnswers\n            dispatch={dispatch}\n            correctAnswer={questions[questionIndex].correct_answer}\n            incorrectAnswers={questions[questionIndex].incorrect_answers}\n            nextQuestion={() => {\n              setQuestionIndex(questionIndex + 1);\n            }}\n          />\n          <p>Score is {state.score}</p>\n        </>\n      ) : (\n        <>\n          <h2>\n            Well done, {state.playerName} your final score is {state.score}!\n          </h2>\n          <Button\n            onClick={() => {\n              toggleVisibility();\n              setQuestionIndex(0);\n              dispatch({ type: 'RESET' });\n            }}\n          >\n            Go back to the home page\n          </Button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default DisplayQuestion;\n","import WelcomePage from '../WelcomePage';\nimport './index.css';\nimport DisplayQuestion from '../DisplayQuestion';\nimport { useReducer, useState } from 'react';\nimport React from 'react';\n\nconst initialState = {\n  genre: '',\n  difficulty: '',\n  playerName: 'Guest',\n  score: 0,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'GENRE':\n      return { ...state, genre: action.payload };\n    case 'DIFFICULTY':\n      return { ...state, difficulty: action.payload };\n    case 'PLAYER_NAME':\n      return { ...state, playerName: action.payload };\n    case 'SCORE':\n      if (state.difficulty === 'hard') {\n        action.payload *= 3;\n      }\n      if (state.difficulty === 'medium') {\n        action.payload *= 2;\n      }\n      return { ...state, score: state.score + action.payload };\n    case 'RESET':\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [isWelcomePage, setIsWelcomePage] = useState(true);\n\n  function toggleVisibility() {\n    setIsWelcomePage(!isWelcomePage);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Trivia Quiz</h1>\n      <h2>Player Name: {state.playerName}</h2>\n      <DisplayQuestion\n        state={state}\n        dispatch={dispatch}\n        isNotVisible={isWelcomePage}\n        toggleVisibility={toggleVisibility}\n      />\n      <WelcomePage\n        dispatch={dispatch}\n        isVisible={isWelcomePage}\n        handleVisibility={toggleVisibility}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}